'Sokoban for QBJS
'Raster Master Sprite/Map Editor was used to create/assemble graphics/map

DIM SHARED board(16, 16), crateboard(16, 16)
DIM SHARED emptyblock, wallblock, crateblock, floorblock, pusherleftblock, pusherrightblock
DIM SHARED pusherupblock, pusherdownblock, cratemarkerblock, playerleft, playerright
DIM SHARED playerup, playerdown, playerdirection
DIM SHARED playmode, x, y, i, j, level
DIM SHARED maxcol, maxrow, tilewidth, tileheight

Dim VScreen
VScreen = _NewImage(320,200,32)
_Dest VScreen

Dim rmx,rmy,rmi,rmj,rmc AS Integer
Dim rmr, rmg, rmb, rma As _Unsigned _Byte
Dim rmprevdest
Const Wall_Size = 776
Const Wall_Format = 4
Const Wall_Width = 16
Const Wall_Height = 16
Const Wall_Colors = 16
Const Wall_Id = 0
Restore WallLabel
Dim Wall
Wall = _NewImage(Wall_Width,Wall_Height,32)
rmprevdest = _Dest
_Dest Wall
For rmy=0 to Wall_Height-1
  For rmx=0 to Wall_Width-1
   Read rmr,rmg,rmb
   if Wall_Format = 7 Then
      Read rma
      PSet(rmx,rmy),_RGBA(rmr,rmg,rmb,rma)
   else
      PSet(rmx,rmy),_RGB(rmr,rmg,rmb)
   end if
  Next rmx
Next rmy
_Dest rmprevdest
Const CrateMarker_Size = 776
Const CrateMarker_Format = 4
Const CrateMarker_Width = 16
Const CrateMarker_Height = 16
Const CrateMarker_Colors = 16
Const CrateMarker_Id = 1
Restore CrateMarkerLabel
Dim CrateMarker
CrateMarker = _NewImage(CrateMarker_Width,CrateMarker_Height,32)
rmprevdest = _Dest
_Dest CrateMarker
For rmy=0 to CrateMarker_Height-1
  For rmx=0 to CrateMarker_Width-1
   Read rmr,rmg,rmb
   if CrateMarker_Format = 7 Then
      Read rma
      PSet(rmx,rmy),_RGBA(rmr,rmg,rmb,rma)
   else
      PSet(rmx,rmy),_RGB(rmr,rmg,rmb)
   end if
  Next rmx
Next rmy
_Dest rmprevdest
Const Crate_Size = 776
Const Crate_Format = 4
Const Crate_Width = 16
Const Crate_Height = 16
Const Crate_Colors = 16
Const Crate_Id = 2
Restore CrateLabel
Dim Crate
Crate = _NewImage(Crate_Width,Crate_Height,32)
rmprevdest = _Dest
_Dest Crate
For rmy=0 to Crate_Height-1
  For rmx=0 to Crate_Width-1
   Read rmr,rmg,rmb
   if Crate_Format = 7 Then
      Read rma
      PSet(rmx,rmy),_RGBA(rmr,rmg,rmb,rma)
   else
      PSet(rmx,rmy),_RGB(rmr,rmg,rmb)
   end if
  Next rmx
Next rmy
_Dest rmprevdest
Const Floor_Size = 776
Const Floor_Format = 4
Const Floor_Width = 16
Const Floor_Height = 16
Const Floor_Colors = 16
Const Floor_Id = 4
Restore FloorLabel
Dim Floor
Floor = _NewImage(Floor_Width,Floor_Height,32)
rmprevdest = _Dest
_Dest Floor
For rmy=0 to Floor_Height-1
  For rmx=0 to Floor_Width-1
   Read rmr,rmg,rmb
   if Floor_Format = 7 Then
      Read rma
      PSet(rmx,rmy),_RGBA(rmr,rmg,rmb,rma)
   else
      PSet(rmx,rmy),_RGB(rmr,rmg,rmb)
   end if
  Next rmx
Next rmy
_Dest rmprevdest
Const PusherLeft_Size = 776
Const PusherLeft_Format = 4
Const PusherLeft_Width = 16
Const PusherLeft_Height = 16
Const PusherLeft_Colors = 16
Const PusherLeft_Id = 5
Restore PusherLeftLabel
Dim PusherLeft
PusherLeft = _NewImage(PusherLeft_Width,PusherLeft_Height,32)
rmprevdest = _Dest
_Dest PusherLeft
For rmy=0 to PusherLeft_Height-1
  For rmx=0 to PusherLeft_Width-1
   Read rmr,rmg,rmb
   if PusherLeft_Format = 7 Then
      Read rma
      PSet(rmx,rmy),_RGBA(rmr,rmg,rmb,rma)
   else
      PSet(rmx,rmy),_RGB(rmr,rmg,rmb)
   end if
  Next rmx
Next rmy
_Dest rmprevdest
Const PusherRight_Size = 776
Const PusherRight_Format = 4
Const PusherRight_Width = 16
Const PusherRight_Height = 16
Const PusherRight_Colors = 16
Const PusherRight_Id = 6
Restore PusherRightLabel
Dim PusherRight
PusherRight = _NewImage(PusherRight_Width,PusherRight_Height,32)
rmprevdest = _Dest
_Dest PusherRight
For rmy=0 to PusherRight_Height-1
  For rmx=0 to PusherRight_Width-1
   Read rmr,rmg,rmb
   if PusherRight_Format = 7 Then
      Read rma
      PSet(rmx,rmy),_RGBA(rmr,rmg,rmb,rma)
   else
      PSet(rmx,rmy),_RGB(rmr,rmg,rmb)
   end if
  Next rmx
Next rmy
_Dest rmprevdest
Const PusherUp_Size = 776
Const PusherUp_Format = 4
Const PusherUp_Width = 16
Const PusherUp_Height = 16
Const PusherUp_Colors = 16
Const PusherUp_Id = 7
Restore PusherUpLabel
Dim PusherUp
PusherUp = _NewImage(PusherUp_Width,PusherUp_Height,32)
rmprevdest = _Dest
_Dest PusherUp
For rmy=0 to PusherUp_Height-1
  For rmx=0 to PusherUp_Width-1
   Read rmr,rmg,rmb
   if PusherUp_Format = 7 Then
      Read rma
      PSet(rmx,rmy),_RGBA(rmr,rmg,rmb,rma)
   else
      PSet(rmx,rmy),_RGB(rmr,rmg,rmb)
   end if
  Next rmx
Next rmy
_Dest rmprevdest
Const PusherDown_Size = 776
Const PusherDown_Format = 4
Const PusherDown_Width = 16
Const PusherDown_Height = 16
Const PusherDown_Colors = 16
Const PusherDown_Id = 8
Restore PusherDownLabel
Dim PusherDown
PusherDown = _NewImage(PusherDown_Width,PusherDown_Height,32)
rmprevdest = _Dest
_Dest PusherDown
For rmy=0 to PusherDown_Height-1
  For rmx=0 to PusherDown_Width-1
   Read rmr,rmg,rmb
   if PusherDown_Format = 7 Then
      Read rma
      PSet(rmx,rmy),_RGBA(rmr,rmg,rmb,rma)
   else
      PSet(rmx,rmy),_RGB(rmr,rmg,rmb)
   end if
  Next rmx
Next rmy
_Dest rmprevdest

call main


WallLabel:
' RGB/RGBA QBJS Image Code Created By Raster Master
' Size = 768 Format = RGB Width=16 Height=16
DATA 0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60
DATA 0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52
DATA 0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4
DATA 0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0xC0,0xCB,0xDC,0xC0,0xCB,0xDC,0xC0,0xCB
DATA 0xDC,0xC0,0xCB,0xDC,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B
DATA 0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4
DATA 0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B
DATA 0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B
DATA 0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4
DATA 0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60
DATA 0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52
DATA 0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C
DATA 0xC0,0xCB,0xDC,0xC0,0xCB,0xDC,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B
DATA 0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0xC0,0xCB,0xDC,0xC0
DATA 0xCB,0xDC,0xC0,0xCB,0xDC,0xC0,0xCB,0xDC,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60,0x7C
DATA 0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60
DATA 0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B
DATA 0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4
DATA 0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B
DATA 0xB4,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52
DATA 0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C
DATA 0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B
DATA 0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0xC0,0xCB,0xDC,0xC0
DATA 0xCB,0xDC,0xC0,0xCB,0xDC,0xC0,0xCB,0xDC,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4
DATA 0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60
DATA 0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52
DATA 0x60,0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4
DATA 0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B
DATA 0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x52
DATA 0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C
DATA 0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60,0x7C,0x52,0x60
DATA 0x7C,0x52,0x60,0x7C,0xC0,0xCB,0xDC,0xC0,0xCB,0xDC,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0x8B
DATA 0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4
DATA 0xC0,0xCB,0xDC,0xC0,0xCB,0xDC,0xC0,0xCB,0xDC,0xC0,0xCB,0xDC,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B
DATA 0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B
DATA 0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4
DATA 0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B
DATA 0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x52,0x60,0x7C,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4,0x8B
DATA 0x9B,0xB4,0x8B,0x9B,0xB4,0x8B,0x9B,0xB4
CrateMarkerLabel:
' RGB/RGBA QBJS Image Code Created By Raster Master
' Size = 768 Format = RGB Width=16 Height=16
DATA 0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5
DATA 0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA
DATA 0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6,0x44,0x38,0xE6,0x44,0x38
DATA 0xE6,0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6,0x44
DATA 0x38,0xE6,0x44,0x38,0xE6,0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6
DATA 0x44,0x38,0xE6,0x44,0x38,0xE6,0x44,0x38,0xE6,0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D
DATA 0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6,0x44,0x38,0xE6,0x44,0x38,0xE6,0x44,0x38,0xE6,0x44,0x38,0xE6,0x44
DATA 0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6,0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA
DATA 0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D
DATA 0xEA,0xA5,0x6D,0xE6,0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6,0x44,0x38,0xE6,0x44
DATA 0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA
DATA 0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6,0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D
DATA 0xEA,0xA5,0x6D,0xE6,0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5
DATA 0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6
DATA 0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D
DATA 0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5
DATA 0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA
DATA 0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6,0x44,0x38
DATA 0xE6,0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5
DATA 0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA
DATA 0xA5,0x6D,0xEA,0xA5,0x6D,0xE6,0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D
DATA 0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5
DATA 0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA
DATA 0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D
DATA 0xEA,0xA5,0x6D,0xE6,0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5
DATA 0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6
DATA 0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6,0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D
DATA 0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5
DATA 0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6,0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6
DATA 0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D
DATA 0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6,0x44,0x38,0xE6,0x44
DATA 0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6,0x44,0x38,0xE6,0x44,0x38,0xE6,0x44,0x38,0xE6,0x44,0x38,0xE6
DATA 0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6,0x44,0x38,0xE6,0x44,0x38
DATA 0xE6,0x44,0x38,0xE6,0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xE6,0x44
DATA 0x38,0xE6,0x44,0x38,0xE6,0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA
DATA 0xA5,0x6D,0xE6,0x44,0x38,0xE6,0x44,0x38,0xE6,0x44,0x38,0xE6,0x44,0x38,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D
DATA 0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5
DATA 0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA
DATA 0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D
CrateLabel:
' RGB/RGBA QBJS Image Code Created By Raster Master
' Size = 768 Format = RGB Width=16 Height=16
DATA 0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5
DATA 0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA
DATA 0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xBE,0x6D,0x48,0xBE,0x6D,0x48
DATA 0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D
DATA 0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xBE
DATA 0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48
DATA 0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D
DATA 0x48,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34,0x75,0x3C,0x34,0x75
DATA 0x3C,0x34,0x75,0x3C,0x34,0x75,0x3C,0x34,0x75,0x3C,0x34,0x75,0x3C,0x34,0x75,0x3C,0x34,0x75,0x3C,0x34
DATA 0x75,0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xBE,0x6D,0x48,0xBE,0x6D
DATA 0x48,0x75,0x3C,0x34,0x75,0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34,0x75
DATA 0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xEA,0xA5,0x6D
DATA 0xEA,0xA5,0x6D,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D
DATA 0x48,0x75,0x3C,0x34,0x75,0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34,0xBE
DATA 0x6D,0x48,0xBE,0x6D,0x48,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34
DATA 0xBE,0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34,0x75,0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D
DATA 0x48,0x75,0x3C,0x34,0x75,0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xBE
DATA 0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34,0xBE,0x6D,0x48,0x75,0x3C,0x34,0x75,0x3C,0x34,0xBE,0x6D,0x48
DATA 0xBE,0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34,0x75,0x3C,0x34,0x75,0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D
DATA 0x48,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34,0x75,0x3C,0x34,0x75
DATA 0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34,0x75,0x3C,0x34,0xBE,0x6D,0x48
DATA 0x75,0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xBE,0x6D,0x48,0xBE,0x6D
DATA 0x48,0x75,0x3C,0x34,0x75,0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34,0x75
DATA 0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xEA,0xA5,0x6D
DATA 0xEA,0xA5,0x6D,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D
DATA 0x48,0x75,0x3C,0x34,0x75,0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34,0xBE
DATA 0x6D,0x48,0xBE,0x6D,0x48,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34
DATA 0xBE,0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34,0x75,0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D
DATA 0x48,0x75,0x3C,0x34,0x75,0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xBE
DATA 0x6D,0x48,0xBE,0x6D,0x48,0x75,0x3C,0x34,0x75,0x3C,0x34,0x75,0x3C,0x34,0x75,0x3C,0x34,0x75,0x3C,0x34
DATA 0x75,0x3C,0x34,0x75,0x3C,0x34,0x75,0x3C,0x34,0x75,0x3C,0x34,0x75,0x3C,0x34,0xBE,0x6D,0x48,0xBE,0x6D
DATA 0x48,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE
DATA 0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48
DATA 0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xBE,0x6D
DATA 0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE
DATA 0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xBE,0x6D,0x48,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D
DATA 0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5
DATA 0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D,0xEA
DATA 0xA5,0x6D,0xEA,0xA5,0x6D,0xEA,0xA5,0x6D
FloorLabel:
' RGB/RGBA QBJS Image Code Created By Raster Master
' Size = 768 Format = RGB Width=16 Height=16
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
PusherLeftLabel:
' RGB/RGBA QBJS Image Code Created By Raster Master
' Size = 768 Format = RGB Width=16 Height=16
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26
DATA 0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F,0x26,0x31,0xFF,0xFF,0xFF,0xFF
DATA 0xFF,0xFF,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F,0x26
DATA 0x31,0x3F,0x26,0x31,0xFF,0xFF,0xFF,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26
DATA 0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26
DATA 0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26
DATA 0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x76
DATA 0x3B,0x36,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0xEA,0xA5,0x6C,0x76,0x3B,0x36,0xE8,0x45,0x37,0xE8,0x45
DATA 0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0x76,0x3B,0x36,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8
DATA 0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C
DATA 0x76,0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B,0x36,0xE8,0x45
DATA 0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8
DATA 0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37
DATA 0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45
DATA 0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37
DATA 0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8
DATA 0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8
DATA 0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B
DATA 0x36,0x76,0x3B,0x36,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
PusherRightLabel:
' RGB/RGBA QBJS Image Code Created By Raster Master
' Size = 768 Format = RGB Width=16 Height=16
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26
DATA 0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
DATA 0x3F,0x26,0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F,0x26
DATA 0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0xFF,0xFF,0xFF,0x3F,0x26,0x31,0x3F,0x26,0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26
DATA 0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26
DATA 0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26
DATA 0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x76,0x3B,0x36,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45
DATA 0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8
DATA 0x45,0x37,0x76,0x3B,0x36,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0x76,0x3B,0x36
DATA 0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45
DATA 0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76
DATA 0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B,0x36,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45,0x37
DATA 0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45
DATA 0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37
DATA 0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8
DATA 0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8
DATA 0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76
DATA 0x3B,0x36,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
PusherUpLabel:
' RGB/RGBA QBJS Image Code Created By Raster Master
' Size = 768 Format = RGB Width=16 Height=16
DATA 0x76,0x3B,0x36,0x76,0x3B,0x36,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B,0x36,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26
DATA 0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x76,0x3B,0x36,0x76,0x3B,0x36,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0x76,0x3B,0x36,0x76,0x3B,0x36,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x76,0x3B,0x36,0x76,0x3B,0x36,0xEA,0xA5,0x6C,0x3F,0x26
DATA 0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0xEA,0xA5,0x6C,0x76,0x3B,0x36
DATA 0x76,0x3B,0x36,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26
DATA 0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0x76,0x3B,0x36,0x76,0x3B,0x36,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26
DATA 0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x76,0x3B,0x36,0x76,0x3B,0x36,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26
DATA 0x31,0x76,0x3B,0x36,0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45
DATA 0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8
DATA 0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45
DATA 0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8
DATA 0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37
DATA 0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45
DATA 0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37
DATA 0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8
DATA 0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8
DATA 0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B
DATA 0x36,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B,0x36,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
PusherDownLabel:
' RGB/RGBA QBJS Image Code Created By Raster Master
' Size = 768 Format = RGB Width=16 Height=16
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B
DATA 0x36,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x76,0x3B,0x36,0x76,0x3B,0x36,0x76,0x3B,0x36,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45
DATA 0x37,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37
DATA 0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8
DATA 0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37
DATA 0xE8,0x45,0x37,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45
DATA 0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8
DATA 0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C
DATA 0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45
DATA 0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8
DATA 0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37
DATA 0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45
DATA 0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xE8,0x45,0x37,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26
DATA 0x31,0xEA,0xA5,0x6C,0x76,0x3B,0x36,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x76,0x3B,0x36,0x76,0x3B,0x36,0x3F,0x26,0x31,0x3F,0x26
DATA 0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x76,0x3B,0x36
DATA 0x76,0x3B,0x36,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26
DATA 0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0x76,0x3B,0x36,0x76,0x3B,0x36,0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26
DATA 0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0xEA,0xA5,0x6C,0x76,0x3B,0x36,0x76,0x3B,0x36,0xEA
DATA 0xA5,0x6C,0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0x76,0x3B,0x36,0x76,0x3B,0x36,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31
DATA 0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x76,0x3B,0x36,0x76,0x3B,0x36,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F,0x26,0x31,0x3F
DATA 0x26,0x31,0x3F,0x26,0x31,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0x76,0x3B,0x36
DATA 0x76,0x3B,0x36,0x76,0x3B,0x36,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5
DATA 0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA,0xA5,0x6C,0xEA
DATA 0xA5,0x6C,0x76,0x3B,0x36,0x76,0x3B,0x36


FUNCTION CanMoveDown
 IF (y < maxrow) AND board(x, y + 1) = floorblock THEN
  CanMoveDown = 1
 ELSEIF (y < maxrow) AND board(x, y + 1) = cratemarkerblock THEN
  CanMoveDown = 1
 ELSEIF (y < (maxrow - 1)) AND (crateboard(x, y + 1) = crateblock) AND ((board(x, y + 2) = floorblock) OR (board(x, y + 2) = cratemarkerblock)) THEN
  CanMoveDown = 1
 ELSE
  CanMoveDown = 0
 END IF
END FUNCTION

FUNCTION CanMoveLeft
 CanMoveLeft = 0
 IF (x > 0) AND board(x - 1, y) = floorblock THEN
  CanMoveLeft = 1
 ELSEIF (x > 0) AND board(x - 1, y) = cratemarkerblock THEN
  CanMoveLeft = 1
 ELSEIF (x > 1) AND (crateboard(x - 1, y) = crateblock) THEN
  IF board(x - 2, y) = floorblock OR board(x - 2, y) = cratemarkerblock THEN CanMoveLeft = 1
 END IF
END FUNCTION

FUNCTION CanMoveRight
 IF (x < maxcol) AND board(x + 1, y) = floorblock THEN
  CanMoveRight = 1
 ELSEIF (x < maxcol) AND board(x + 1, y) = cratemarkerblock THEN
  CanMoveRight = 1
 ELSEIF (x < (maxcol - 1)) AND (crateboard(x + 1, y) = crateblock) AND ((board(x + 2, y) = floorblock) OR (board(x + 2, y) = cratemarkerblock)) THEN
  CanMoveRight = 1
 ELSE
  CanMoveRight = 0
 END IF
END FUNCTION

FUNCTION CanMoveUp
 CanMoveUp = 0
 IF (y > 0) AND board(x, y - 1) = floorblock THEN
  CanMoveUp = 1
 ELSEIF (y > 0) AND board(x, y - 1) = cratemarkerblock THEN
  CanMoveUp = 1
 ELSEIF (y > 1) AND (crateboard(x, y - 1) = crateblock) THEN
  IF (board(x, y - 2) = floorblock) OR (board(x, y - 2) = cratemarkerblock) THEN CanMoveUp = 1
 END IF
END FUNCTION

SUB DrawBoard
  FOR j = 0 TO maxrow
   FOR i = 0 TO maxcol
     CALL DrawItem(i, j)
   NEXT i
  NEXT j
END SUB

SUB DrawItem (bx as integer, by as integer)
   IF board(bx, by) = wallblock THEN
     _putimage (bx * tilewidth, by * tileheight), Wall 
   ELSEIF crateboard(bx, by) = crateblock THEN
     _putimage (bx * tilewidth, by * tileheight), Crate 
   ELSEIF board(bx, by) = cratemarkerblock THEN
     _putimage (bx * tilewidth, by * tileheight), CrateMarker 
   ELSEIF board(bx, by) = floorblock THEN
     _putimage (bx * tilewidth, by * tileheight), Floor 
   END IF
END SUB

SUB DrawPusher
  IF playerdirection = playerleft THEN
    _putimage (x * tilewidth, y * tileheight), PusherLeft 
  ELSEIF playerdirection = playerright THEN
    _putimage (x * tilewidth, y * tileheight), PusherRight 
  ELSEIF playerdirection = playerup THEN
    _putimage (x * tilewidth, y * tileheight), PusherUp 
  ELSEIF playerdirection = playerdown THEN
    _putimage (x * tilewidth, y * tileheight), PusherDown 
  END IF
END SUB

SUB GoDown
 playerdirection = playerdown
 IF (board(x, y + 1) = floorblock) OR (board(x, y + 1) = cratemarkerblock) THEN
    CALL DrawItem(x, y)
    y = y + 1
 ELSEIF crateboard(x, y + 1) = crateblock THEN
    crateboard(x, y + 1) = emptyblock
    crateboard(x, y + 2) = crateblock
    board(x, y + 1) = floorblock
    board(x, y + 2) = emptyblock
    CALL DrawItem(x, y + 2)
    CALL DrawItem(x, y)
    y = y + 1
 END IF
 DrawPusher
END SUB

SUB GoLeft
 playerdirection = playerleft
 IF (board(x - 1, y) = floorblock) OR (board(x - 1, y) = cratemarkerblock) THEN
    CALL DrawItem(x, y)
    x = x - 1
 ELSEIF crateboard(x - 1, y) = crateblock THEN
    crateboard(x - 1, y) = emptyblock
    crateboard(x - 2, y) = crateblock
    board(x - 1, y) = floorblock
    board(x - 2, y) = emptyblock
    CALL DrawItem(x - 2, y)
    CALL DrawItem(x, y)
    x = x - 1
 END IF
 DrawPusher
END SUB

SUB GoRight
 playerdirection = playerright
 IF (board(x + 1, y) = floorblock) OR (board(x + 1, y) = cratemarkerblock) THEN
    CALL DrawItem(x, y)
    x = x + 1
 ELSEIF crateboard(x + 1, y) = crateblock THEN
    crateboard(x + 1, y) = emptyblock
    crateboard(x + 2, y) = crateblock
    board(x + 1, y) = floorblock
    board(x + 2, y) = emptyblock
    CALL DrawItem(x + 2, y)
    CALL DrawItem(x, y)
    x = x + 1
 END IF
 CALL DrawPusher
END SUB

SUB GoUp
 playerdirection = playerup
 IF (board(x, y - 1) = floorblock) OR (board(x, y - 1) = cratemarkerblock) THEN
    CALL DrawItem(x, y)
    y = y - 1
 ELSEIF crateboard(x, y - 1) = crateblock THEN
    crateboard(x, y - 1) = emptyblock
    crateboard(x, y - 2) = crateblock
    board(x, y - 1) = floorblock
    board(x, y - 2) = emptyblock
    CALL DrawItem(x, y - 2)
    CALL DrawItem(x, y)
    y = y - 1
 END IF
 DrawPusher
END SUB

SUB MoveDown
  IF CanMoveDown THEN
     GoDown
  END IF
END SUB

SUB MoveLeft
  IF CanMoveLeft THEN
     GoLeft
  END IF
END SUB

SUB MoveRight
  IF CanMoveRight THEN
     GoRight
  END IF
END SUB

SUB MoveUp
  IF CanMoveUp THEN
     GoUp
  END IF
END SUB


FUNCTION PlayerWin
  count = 0
  match = 0
  FOR j = 0 TO maxrow
    FOR i = 0 TO maxcol
      IF board(i, j) = cratemarkerblock THEN
        count = count + 1
        IF crateboard(i, j) = crateblock THEN
          match = match + 1
        END IF
      END IF
    NEXT i
  NEXT j
  IF count = match THEN PlayerWin = 1 ELSE PlayerWin = 0
END FUNCTION

SUB ReadBoard
IF level = 1 THEN
    RESTORE boardMapLabel1
  ELSEIF level = 2 THEN
    RESTORE boardMapLabel2
  ELSEIF level = 3 THEN
    RESTORE boardMapLabel3
  ELSEIF level = 4 THEN
    RESTORE boardMapLabel4
  ELSEIF level = 5 THEN
    RESTORE boardMapLabel5
  END IF

  READ maxcol, maxrow, tilewidth, tileheight
  maxcol = maxcol - 1
  maxrow = maxrow - 1

  FOR j = 0 TO maxrow
   FOR i = 0 TO maxcol
     READ tile
     IF tile = crateblock THEN
        crateboard(i, j) = crateblock
        board(i, j) = emptyblock
     ELSEIF (tile = pusherleftblock) THEN
       x = i
       y = j
       playerdirection = playerleft
       board(i, j) = floorblock
     ELSEIF (tile = pusherrightblock) THEN
       x = i
       y = j
       playerdirection = playerright
       board(i, j) = floorblock
     ELSEIF (tile = pusherupblock) THEN
       x = i
       y = j
       playerdirection = playerup
       board(i, j) = floorblock
     ELSEIF (tile = pusherdownblock) THEN
       x = i
       y = j
       playerdirection = playerdown
       board(i, j) = floorblock
     ELSE
       board(i, j) = tile
       crateboard(i, j) = emptyblock
     END IF
   NEXT i
  NEXT j
END SUB

SUB VScreenToScreen 
 _DEST 0
 _putimage(0,0)-(640,400),VScreen
 _DEST VScreen
END SUB



SUB Main
  emptyblock = -1
  wallblock = 0
  crateblock = 2
  floorblock = 4
  pusherleftblock = 5
  pusherrightblock = 6
  pusherupblock = 7
  pusherdownblock = 8

  cratemarkerblock = 1

  playerleft = 0
  playerright = 1
  playerup = 2
  playerdown = 3
  playerdirection = playerright

  playmode = 1
  level = 1

'we read these values from the map data
maxcol = 0
maxrow = 0
tileheight = 0
tileheight = 0

ReadBoard
DrawBoard
DrawPusher

LOCATE 5, 25
PRINT "Level:"; level
VScreenToScreen
WHILE playmode
 SLEEP
 IF _KEYDOWN(CVI(CHR$(0) + "P")) THEN 
   MoveDown   '_KEYDOWN(20480)
   VScreenToScreen
 END IF

 IF _KEYDOWN(CVI(CHR$(0) + "H")) THEN 
   MoveUp   '_KEYDOWN(18432)
   VScreenToScreen
 END IF
 
 IF _KEYDOWN(CVI(CHR$(0) + "K")) THEN 
   MoveLeft   '_KEYDOWN(19200)
   VScreenToScreen
 END IF
 
 IF _KEYDOWN(CVI(CHR$(0) + "M")) THEN 
   MoveRight   '_KEYDOWN(19712)
   VScreenToScreen
 END IF
 
 IF PlayerWin THEN
    level = level + 1
    IF level > 2 THEN 
       level = 1
    END IF   

    SLEEP 2
    LOCATE 5, 25
    PRINT "Level:"; level
    ReadBoard
    DrawBoard
    DrawPusher
    VScreenToScreen
 END IF
WEND

end sub



boardMapLabel1:
' Basic Map Code Created By Raster Master
' Size =103 Width=11 Height=9 Tile Width=32 Tile Height=32
' board3
DATA 11,9,16,16,0,0,0,0,0,0
DATA 0,0,0,0,0,0,4,0,1,4
DATA 4,4,4,4,1,0,0,4,0,0
DATA 0,0,4,4,4,0,0,0,4,1
DATA 0,4,2,4,0,4,0,0,0,4
DATA 4,0,4,4,4,2,4,4,0,0
DATA 4,4,0,0,0,0,4,4,4,0
DATA 0,4,4,4,2,5,4,4,4,4
DATA 0,0,4,4,4,4,4,0,0,4
DATA 4,0,0,0,0,0,0,0,0,0
DATA 0,0,0

boardMapLabel2:
' Basic Map Code Created By Raster Master
' Size =103 Width=11 Height=9 Tile Width=16 Tile Height=16
' map2
DATA 11,9,16,16,0,0,0,0,0,0
DATA 0,0,0,0,0,0,1,4,4,4
DATA 4,4,4,4,4,0,0,4,4,4
DATA 4,4,0,4,0,1,0,0,0,4
DATA 0,0,4,2,2,0,4,0,0,4
DATA 4,1,0,6,0,4,0,4,0,0
DATA 4,4,4,4,4,4,4,2,4,0
DATA 0,4,4,0,0,4,0,0,0,4
DATA 0,0,4,4,4,4,4,4,4,4
DATA 4,0,0,0,0,0,0,0,0,0
DATA 0,0,0


