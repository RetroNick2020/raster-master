(* ************************************************************ *)
(* demo2.pas For TMT Pascal                                     *)
(*                                                              *)
(* cross was created by Exporting image as putimage+Mask array  *)
(* from Raster Master.                                          *)
(* ************************************************************ *)

Program Demo2;
 uses crt,graph;

const
(* TMT Pascal PutImage Bitmap Code Created By Raster Master *)
(* Size= 1028 Width= 32 Height= 32 Colors= 16 *)
 Cross_Size = 1028;
 Cross_Width = 32;
 Cross_Height = 32;
 Cross_Colors = 16;
 Cross_Id = 0;
 Cross : array[0..1027] of byte = (
  $1F,$00,$1F,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0C,
  $0C,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0C,$0C,$0E,$0E,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$0E,$0E,$0C,$0C,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0C,$0C,$0E,$0E,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$0E,$0E,$0C,$0C,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0C,
  $0C,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0C,$0C,$0E,$0E,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$0E,$0E,$0C,$0C,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0C,$0C,$0E,$0E,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$0E,$0E,$0C,$0C,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0C,
  $0C,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0C,$0C,$0E,$0E,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$0E,$0E,$0C,$0C,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0C,$0C,$0E,$0E,$0E,
  $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,
  $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0C,$0C,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,
  $0E,$0E,$0E,$0E,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0E,$0E,$0C,
  $0C,$0E,$0E,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,
  $0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0E,$0E,$0C,$0C,$0E,$0E,$0C,$0C,$0C,$0C,$0C,
  $0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,
  $0E,$0E,$0E,$0C,$0C,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,
  $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0C,$0C,$0E,$0E,$0E,
  $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$0E,$0E,$0C,$0C,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0C,
  $0C,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0C,$0C,$0E,$0E,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$0E,$0E,$0C,$0C,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0C,$0C,$0E,$0E,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$0E,$0E,$0C,$0C,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0C,
  $0C,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0C,$0C,$0E,$0E,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$0E,$0E,$0C,$0C,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0C,$0C,$0E,$0E,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$0E,$0E,$0C,$0C,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0C,
  $0C,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0C,$0C,$0E,$0E,$00,$00,$00,$00,$00,
  $00,$00,$00,$00,$00,$00,$00,$00);

var
  size   : longint;
  key    : char;
  i      : integer;
begin
  SetGraphMode($13);
  SetFillStyle(SolidFill,1);
  Bar(0,0,GetMaxX,GetMaxY);

  for i:=0 to 15 do
  begin
   setfillstyle(SOLIDFILL,i);
   bar(i*20,20,i*20+19,180);
  end;

  setwritemode(COPYPUT);
  putimage(30,100,Cross);
  (*setwritemode(NOTPUT);
  putimage(70,100,Cross); *)  (*NOTPUT is not supported in TMT *)
  setwritemode(ANDPUT);
  putimage(110,100,Cross);
  setwritemode(ORPUT);
  putimage(150,100,Cross);
  setwritemode(XORPUT);
  putimage(190,100,Cross);
  setwritemode(COPYPUT);
  settranspmode(True,0);   (* sets color 0 to trasparent *)
  putimage(230,100,Cross);

  key:=readkey;
  closegraph;
end.

